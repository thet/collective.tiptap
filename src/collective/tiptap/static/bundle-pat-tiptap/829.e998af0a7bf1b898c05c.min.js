"use strict";(self.webpackChunk_patternslib_pat_tiptap=self.webpackChunk_patternslib_pat_tiptap||[]).push([[829],{6829:function(t,e,n){n.r(e),n.d(e,{HorizontalRule:function(){return s},default:function(){return s}});var r=n(6798),o=n(6922);const s=r.Node.create({name:"horizontalRule",defaultOptions:{HTMLAttributes:{}},group:"block",parseHTML:()=>[{tag:"hr"}],renderHTML({HTMLAttributes:t}){return["hr",(0,r.mergeAttributes)(this.options.HTMLAttributes,t)]},addCommands(){return{setHorizontalRule:()=>({chain:t})=>t().command((({tr:t,dispatch:e})=>{const{selection:n}=t,{empty:r,$anchor:s}=n,a=s.parent.isTextblock&&!s.parent.type.spec.code&&!s.parent.textContent;if(!r||!a||!e)return!0;const i=s.before(),c=s.start();return t.deleteRange(i,c),t.setSelection(o.Bs.create(t.doc,i)),!0})).insertContent({type:this.name}).command((({tr:t,dispatch:e})=>{var n;if(e){const{parent:e,pos:r}=t.selection.$from,s=r+1;if(!t.doc.nodeAt(s)){const r=null===(n=e.type.contentMatch.defaultType)||void 0===n?void 0:n.create();r&&(t.insert(s,r),t.setSelection(o.Bs.create(t.doc,s)))}t.scrollIntoView()}return!0})).run()}},addInputRules(){return[(0,r.nodeInputRule)({find:/^(?:---|â€”-|___\s|\*\*\*\s)$/,type:this.type})]}})}}]);