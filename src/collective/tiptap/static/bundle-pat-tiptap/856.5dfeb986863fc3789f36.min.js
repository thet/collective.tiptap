"use strict";(self.webpackChunk_patternslib_pat_tiptap=self.webpackChunk_patternslib_pat_tiptap||[]).push([[856],{6856:function(t,e,o){o.r(e),o.d(e,{Blockquote:function(){return r},default:function(){return r},inputRegex:function(){return u}});var n=o(6798);const u=/^\s*>\s$/,r=n.Node.create({name:"blockquote",defaultOptions:{HTMLAttributes:{}},content:"block*",group:"block",defining:!0,parseHTML:()=>[{tag:"blockquote"}],renderHTML({HTMLAttributes:t}){return["blockquote",(0,n.mergeAttributes)(this.options.HTMLAttributes,t),0]},addCommands:()=>({setBlockquote:()=>({commands:t})=>t.wrapIn("blockquote"),toggleBlockquote:()=>({commands:t})=>t.toggleWrap("blockquote"),unsetBlockquote:()=>({commands:t})=>t.lift("blockquote")}),addKeyboardShortcuts(){return{"Mod-Shift-b":()=>this.editor.commands.toggleBlockquote()}},addInputRules(){return[(0,n.wrappingInputRule)({find:u,type:this.type})]}})}}]);